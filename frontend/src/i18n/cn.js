/********************************************************************************
 * Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/
'use strict';

exports.__esModule = true;
exports.default = {
  jifa: {
    searchTip:"搜索文本使用Java语言正则语法，比如用 *.String.* 来搜索java.lang.String，搜索数值使用>num,<num,>=num,<=num,==num,!=num,num的语法",
    searchPlaceholder:'搜索...',
    heapDumpAnalysis: '堆分析',
    gclogAnalysis: 'GC日志分析',

    unlockFileSuccessPrompt:'解锁成功！',
    unlockFilePrompt:'是否解锁文件，允许任意用户访问?',
    unlockFile:'解锁文件',
    setting: '设置',
    diskCleanup: '清理磁盘',
    help: '帮助',
    consoleMsg: '',
    getStarted: '开始使用',
    success: '成功',
    console: '控制台',
    qm: '？',
    feedback: '建议与反馈',
    options: '选项',
    optionsWithHelp: '选项',
    close: '关闭',
    uploadPrompt: '选择文件(拖拽或点击选择)',
    enterPrompt: '请输入',
    inLine: '排队中',
    addFile: '添加文件',
    addHeapDumpFile:'添加 Heap Dump',
    addGCLogFile: '添加 GC 日志',
    copy: '复制',
    copySuccessfully: '复制成功',
    requestFailed: '请求失败',
    config: '配置',
    prompt: '提示',
    confirm: '确定',
    reset: '重置',
    cancel: '取消',
    fileTransfer: '文件传输',
    progress: '进度',
    analyze: '分析',
    reanalyze: '重新分析',
    release: '释放',
    download: '下载原文件',
    edit: '编辑',
    delete: '删除',
    loading: '加载中',
    goToOverViewPrompt: '即将进入概况页面...',
    deletePrompt: '此操作将永久删除该文件，是否继续？',
    deleteSuccessPrompt: '删除成功！',
    deleteFailedPrompt: '删除失败！',
    deleteCanceled: '已取消删除',
    downloadBegin: '文件开始下载，请耐心等待',
    returnValue: '确定离开吗?',
    gotoParseFile: '即将解析文件',

    typeKeyWord: '输入关键字搜索',

    transferring: '传输中',
    transferError: '传输失败',

    show: '显示',
    hide: '隐藏',

    expandResultDivWidth: '显示宽度 Expand',
    shrinkResultDivWidth: '显示宽度 Shrink',
    resetResultDivWidth: '显示宽度 Reset',

    backToHome: '返回主页',
    promote404: '您所寻找的页面不存在。可以点击下面的按钮，返回主页。',

    tip: {
      copyName: '复制文件名',
      rename: '修改文件名',
      uploadToOSS: '上传文件到OSS',
      setShare: '设置文件共享',
      deleteFile: '删除文件',
      downloadFile: '本地下载文件',
    },

    heap: {
      basicInformation: '基础信息',
      reanalyzePrompt: '是否继续？',
      releasePrompt: '是否继续？',
      overview: '概况',
      leakSuspects: '泄露报表',
      description: '描述',
      detail: '细节',
      GCRoots: 'GC 根对象',
      systemProperty: '系统属性',
      OSBit: '操作系统位数',
      jvmInfo: 'JVM',
      heapCreationDate: '创建时间',
      usedHeapSize: '堆使用大小',
      numberOfClasses: '类数量',
      numberOfObjects: '对象数量',
      numberOfClassLoaders: '类加载器数量',
      numberOfGCRoots: '根对象数量',
      threadInfo: '线程信息',
      dominatorTree: '支配树',
      histogram: '类视图',
      unreachableObjects: '不可达类视图',
      duplicatedClasses: '重复类视图',
      classLoaders: '类加载器视图',
      directByteBuffer: '堆外内存视图',
      compare: '内存文件对比',
      ref: {
        object: {
          label: '对象引用',
          outgoing: '引用对象集合',
          incoming: '被引用对象集合',
        },
        type: {
          label: '类型引用',
          outgoing: '引用类型集合',
          incoming: '被引用类型集合',
        }
      },

      pathToGCRoots: 'GC 根路径',
      mergePathToGCRoots: '合并GC 根路径',

      descOfKeepUnreachableObjects: '如果启用此选项，分析器会将不可达对象视为不可达根，进而分析其中的引用关系。 否则，将不对不可达对象进行进一步的分析，仅统计类型信息，即不可达类视图',
      descOfStrictness: '\'strictness\' 表示当分析过程中遇到错误时的后续动作',
      descOfStopStrictness: '终止分析',
      descOfWarnStrictness: '报告警告信息并继续分析',
      descOfPermissiveStrictness: '报告警告信息，尝试修复错误并继续分析',
    },

    gclog:{
      minute:'分钟',
      hour:'小时',
      day:'天',

      overview: 'GC概况',
      gcCause: 'GC原因',
      gcPhase: 'GC阶段',
      gcCauseAndPhase: '原因与阶段',
      gcDetail: 'GC详情',
      graph: '时间图',
      count: '次数',
      avgPause: '平均暂停',
      maxPause: '最大暂停',
      totalPause: '总暂停',
      pausePercent: '时间占比',
      avgTime: '平均时间',
      maxTime: '最大时间',
      totalTime: '总时间',
      avgInterval:'平均间隔',
      timePercent: '时间占比',
      noRealTime: '日志中没有展示GC发生的现实时间，只能根据相对于日志开始的时间进行搜索。强烈建议打开显示GC发生现实时间的选项。',

      youngGC: 'Young GC',
      fullGC: 'Full GC',
      promotion:"对象晋升",
      allocation:"对象分配",
      reclamation:"对象回收",
      youngRegion:"Young",
      oldRegion:"Old",
      humongousRegion:"Humongous",
      metaspaceRegion:"Metaspace",
      metaspaceMax:"Metaspace最大值",
      totalHeap:"堆内存已使用",
      heapMax:"堆内存最大值",
      stwTooltip:"程序在这个阶段会暂停(stop the world)",

      gcOverview:{
        diagnosis:"问题诊断",
        basicInfo:"基本信息",
        kpi:"关键性能指标",
        problems:"问题",
        suggestions:"建议",

        vmOptions:"虚拟机参数",
        collector:"收集器",
        duration:"日志时长",
        heapSize:"堆大小",
        youngGenSize:"年轻代大小",
        oldGenSize:"老年代大小",
        metaspaceSize:"Metaspace大小",

        throughput:"吞吐率",
        throughputHint:"吞吐率是程序实际执行的时间/总运行时间，吞吐率越高意味着GC开销越小",
        gcDurationPercentage:"GC时间占比",
        maxPause:"最大暂停",
        youngGCIntervalAvgMin: "Young GC 平均/最小间隔",
        youngGCPauseAvgMax:"Young GC 平均/最大暂停",
        oldGCIntervalAvgMin:"Old GC 平均/最小间隔",
        fullGCIntervalAvgMin:"Full GC 平均/最小间隔",
        fullGCPauseAvgMax:"Full GC 平均/最大暂停",
        promotionAvgMax:"平均/最大单次对象晋升",
        promotionSpeed:"对象晋升速度",
        objectCreationSpeed:"对象创建速度",
      },
      cause:{
        systemgc:'调用System.gc()或Runtime.getRuntime().gc()时触发',
        jvmti:'使用Jvmti时调用ForceGarbageCollection触发',
        gclocker:'如果线程执行在JNI临界区时，刚好需要进行GC，此时GC Locker会阻止 GC的发生，同时阻止其他线程进入JNI临界区，直到最后一个线程退出临界区时触发',
        heapInspection:'当你使用工具(如jmap)执行堆检查操作时会触发',
        heapDump:'执行Heap Dump前会触发一次Full GC',
        allocationFail:'对象分配空间不足时触发，这是最常见的GC触发原因',
        metaspace:'Metaspace空间不足时触发Full GC',
        ergonomics:'是为了调整堆的大小，从而达到某种暂停时间或吞吐量目标',
        g1Evacuation:'对象分配空间不足时触发，这是最常见的GC触发原因',
        humongous:'G1大对象分配失败时触发Full GC。大对象指的是超过大小Heap Region Size的对象',
        lastDitch:'在Metadata GC Threshold GC后，空间依然不足，就会再次触发Full gc并清除弱引用',
        promotionFail:'在Young GC过程中，如果老年代没有足够的空间提供晋升，那么这次GC就会变成Full GC',
        toSpaceExhausted:'在Young GC过程中，如果没有足够的region作为to space或用来晋升，那么所有年轻代都会进入老年代',
        proactive:'JVM主动触发GC来减少堆内存占用，通常只在对象分配速率很低时进行',
        allocationRate:'当JVM根据当前的对象分配速度估计内存即将耗尽，就会触发一次GC',
        timer:'定期触发的GC',
        allocationStall:'当堆使用率已满无法分配对象时触发',
        highUsage:'堆的水位超过一定的百分比，就会触发一次GC',
        warmup:'JVM启动之后，如果一直没有发生过GC，那么会在堆内存使用超过10%、20%、30%时，分别触发一次GC',
        metaspaceClearSoftRef: '在Metadata GC Threshold GC后，空间依然不足，就会再次触发Full gc并清除弱引用',
        g1Periodic:"周期性触发的gc",
        dcmd:"通过jcmd命令触发的Full gc",
        g1Compaction:'就是G1 Full gc',
        g1Preventive:'提前触发gc来防止出现to-space exhausted',
      },
      graphs:{
        noData: '在该时间段没有数据',
        timeSpan:"时间跨度",
        timePoint:"时间点",
        gcCount: 'GC次数',
        gcPause: '单次暂停时间(ms)',
        heap:'堆内存(MB)',
        metaspace:'Metaspace(MB)',
        alloRec:'对象分配与回收速度(MB/s)',
        promotion:'对象晋升速度(KB/s)',
        gccycle:'GC 周期(%)',
      },
      detail:{
        filters:"筛选条件",
        eventType:"GC 事件类型",
        logTime:"日志时间",
        pauseTime:"暂停时间",
      },
      diagnosis:{
        problems:{
          noProblem:"暂无发现问题",
          cmsFrequentConcurrentMarkSwept:'检测到出现了连续CMS GC的情况',
          concurrentFailure:'发生过{count}次Concurrent Mode Failure的情况',
          fullGC:'发生了{count}次Full GC',
          g1FrequentConcurrentCycle:'检测到出现了连续Concurrent Cycle的情况',
          g1ToSpaceExhausted:'发生过{count}次to-space exhausted的情况',
          humongousToSpaceExhausted:'疑似由于大对象分配导致To Space Exhausted的情况',
          lowThroughput:"程序的吞吐量({throughput}%)过低",
          metaspaceFullGC:"发生过{count}次Metaspace满导致的Full GC",
          systemGC:"发生过{count}次调用System.gc()导致的Full GC",
          promotionFailed:"发生过{count}次晋升失败的情况",
          smallYoungGen:"年轻代太小，只占堆总大小的{percent}%",
          smallOldGen:"老年代太小，只占堆总大小的{percent}%",
          zgcTooFrequent:"GC时间占总运行时间比例过大，达{percent}%",
          allocationStall:"存在大量Allocation Stall的情况,可能导致应用长时间暂停",
          g1YoungSuddenlyBecomesSmall:"在{time}时年轻代突然急剧缩小",
          jdk11cms:"在 JDK 11+ 上仍然使用 CMS GC",
        },
        suggestions:{
          addHeapRegionSize:'增大Heap Region Size -XX:G1HeapRegionSize',
          noXMN:'对于G1建议不要设置-Xmn',
          reviewHuge:'排查一下应用的大对象分配情况，可是使用Grace的堆分析功能',
          addGCThread:"提高并行GC线程数(但不要超过CPU核数) -XX:ParallelGCThreads",
          enlargeHeap:"使用更大的堆 -Xmx -Xms",
          enlargeMetaspace:"增大MetaSpace空间 -XX:MetaspaceSize -XX:MaxMetaspaceSize",
          reviewMetaspace:"排查一下Metaspace中到底是哪些对象将空间占满了",
          reviewSystemGC:"检查一下System.gc()的调用是否有必要",
          disableSystemGC:"考虑彻底关闭System.gc() -XX:+DisableExplicitGC",
          enlargeOld:"增大老年代的大小，即减小-Xmn",
          lowerCMSOldGCThreshold:"减小CMS GC触发的阈值 -XX:CMSInitiatingOccupancyFraction",
          reviewOld:"排查应用是否有内存泄漏和大量大对象分配，可以使用Grace的堆分析功能",
          enlargeYoung:"增大年轻代的大小，即增大-Xmn",
          reviewFullGCCause:"检查一下Full GC的触发条件是否有异常",
          noNewSizeEqual:"不要把-MaxNewSIze和-NewSize设成一样",
          setReasonableXmn:"请合理设置Xmn(或者MaxNewSize等类似参数)",
          addConcurrentGCThread:"适当提高并发GC线程数 -XX:ConcGCThreads",
          enlargeHeapWithRecommend:"使用更大的堆，推荐 -Xmx{size}g -Xms{size}g",
          addZGCAllocationSpikeTolerance:"适当增加 -XX:ZAllocationSpikeTolerance",
          longPauseToShrinkYoung:"这可能是GC暂停时间变长和活对象突然变多导致的",
          updateJDK:"考虑升级JDK版本",
          dontUseCMSAnyMore:"CMS GC在JDK14中已经被完全删除，强烈建议不要再使用CMS，推荐升级到G1，ZGC或Shenandoah。 参见 <a href='http://openjdk.java.net/jeps/363'>JEP 363</a>",
          updateToJDK11G1:"推荐升级到JDK11及以上的G1，相较于8有较大改进",
        }
      }
    },

    threadDump: {
      title: "线程分析",
      addFile: "添加 Thread Dump",
      overview: '概览',
      lockView: '锁视图',
      basicInfo: '基础信息',
      threadSummary: "线程概要",
      time: '时间',
      vmInfo: '虚拟机',
      jniRefs: 'JNI References',
      jniWeakRefs: 'JNI Weak References',
      errorPrompt: '解析过程中产生的错误数：',
      deadLockCount: '死锁数量',
      threadGroupSummary: "线程池概要",
      javaThread: "Java Thread",
      jitThread: "JIT Thread",
      gcThread: "GC Thread",
      otherThread: "Other Thread",
      total: "Total",
      callSiteTree: "调用栈",
      fileContent: "文件内容",
      loadFileContent: "加载",
      loadMoreFileContent: "加载更多",
      threadNameLabel: "线程名",
    }
  }
};
